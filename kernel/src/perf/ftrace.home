// home-os Function Tracer
// Kernel function tracing

import "../core/foundation.home" as foundation

const MAX_TRACE_ENTRIES: u32 = 1024

struct TraceEntry {
  function: u64,
  timestamp: u64,
  cpu: u32
}

var trace_buffer: [TraceEntry; 1024]
var trace_index: u32 = 0
var tracing_enabled: u32 = 0

export fn ftrace_init() {
  trace_index = 0
  tracing_enabled = 0
  foundation.serial_write_string("[FTrace] Function tracer initialized\n")
}

export fn ftrace_enable() {
  tracing_enabled = 1
  foundation.serial_write_string("[FTrace] Tracing enabled\n")
}

export fn ftrace_disable() {
  tracing_enabled = 0
  foundation.serial_write_string("[FTrace] Tracing disabled\n")
}

export fn ftrace_record(function_addr: u64) {
  if tracing_enabled == 0 { return }
  if trace_index >= MAX_TRACE_ENTRIES { return }
  
  trace_buffer[trace_index].function = function_addr
  trace_buffer[trace_index].timestamp = foundation.rdtsc()
  trace_buffer[trace_index].cpu = 0  // Stub
  
  trace_index = trace_index + 1
}

export fn ftrace_dump() {
  foundation.serial_write_string("\n=== Function Trace ===\n")
  
  var i: u32 = 0
  while i < trace_index {
    foundation.serial_write_string("Function: ")
    foundation.serial_write_string(" @ ")
    foundation.serial_write_string("\n")
    i = i + 1
  }
}

export fn ftrace_clear() {
  trace_index = 0
}
