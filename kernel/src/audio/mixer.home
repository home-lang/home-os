// home-os Audio Mixer
// Multi-channel audio mixing

import "../core/foundation.home" as foundation

const MAX_MIXER_CHANNELS: u32 = 16

struct MixerChannel {
  volume: u8,
  pan: u8,
  muted: u32,
  active: u32
}

var mixer_channels: [MixerChannel; 16]
var master_volume: u8 = 255

export fn mixer_init() {
  var i: u32 = 0
  while i < MAX_MIXER_CHANNELS {
    mixer_channels[i].volume = 255
    mixer_channels[i].pan = 128
    mixer_channels[i].muted = 0
    mixer_channels[i].active = 0
    i = i + 1
  }
  
  foundation.serial_write_string("[Mixer] Initialized\n")
}

export fn mixer_set_volume(channel: u32, volume: u8) {
  if channel >= MAX_MIXER_CHANNELS { return }
  mixer_channels[channel].volume = volume
}

export fn mixer_set_pan(channel: u32, pan: u8) {
  if channel >= MAX_MIXER_CHANNELS { return }
  mixer_channels[channel].pan = pan
}

export fn mixer_set_master_volume(volume: u8) {
  master_volume = volume
}

export fn mixer_mute(channel: u32) {
  if channel >= MAX_MIXER_CHANNELS { return }
  mixer_channels[channel].muted = 1
}

export fn mixer_unmute(channel: u32) {
  if channel >= MAX_MIXER_CHANNELS { return }
  mixer_channels[channel].muted = 0
}
