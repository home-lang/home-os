// home-os ALSA API
// Advanced Linux Sound Architecture compatible API

import "../core/foundation.home" as foundation
import "../drivers/audio.home" as audio

const SND_PCM_STREAM_PLAYBACK: u32 = 0
const SND_PCM_STREAM_CAPTURE: u32 = 1

const SND_PCM_FORMAT_S16_LE: u32 = 2

struct AlsaPcm {
  stream: u32,
  format: u32,
  rate: u32,
  channels: u32,
  buffer: u64,
  buffer_size: u32
}

var alsa_initialized: u32 = 0

export fn alsa_init() {
  if alsa_initialized == 1 { return }
  
  audio.audio_init()
  alsa_initialized = 1
  foundation.serial_write_string("[ALSA] Initialized\n")
}

export fn snd_pcm_open(name: u64, stream: u32, mode: u32) -> u64 {
  if alsa_initialized == 0 { return 0 }
  
  var pcm: AlsaPcm
  pcm.stream = stream
  pcm.format = SND_PCM_FORMAT_S16_LE
  pcm.rate = 44100
  pcm.channels = 2
  
  return @ptrFromInt(pcm)
}

export fn snd_pcm_writei(pcm: u64, buffer: u64, frames: u32) -> u32 {
  if pcm == 0 { return 0 }
  
  audio.audio_play(buffer, frames * 2)
  return frames
}

export fn snd_pcm_close(pcm: u64) {
  // Close PCM device
}
