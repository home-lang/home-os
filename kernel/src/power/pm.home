// home-os Power Management
// Power states and management

import "../core/foundation.home" as foundation
import "../drivers/acpi.home" as acpi

const PM_STATE_RUNNING: u32 = 0
const PM_STATE_SUSPEND: u32 = 1
const PM_STATE_HIBERNATE: u32 = 2
const PM_STATE_SHUTDOWN: u32 = 3

var pm_state: u32 = PM_STATE_RUNNING

export fn pm_init() {
  pm_state = PM_STATE_RUNNING
  foundation.serial_write_string("[PM] Power management initialized\n")
}

export fn pm_shutdown() {
  foundation.serial_write_string("[PM] Shutting down...\n")
  pm_state = PM_STATE_SHUTDOWN
  acpi.acpi_shutdown()
}

export fn pm_reboot() {
  foundation.serial_write_string("[PM] Rebooting...\n")
  acpi.acpi_reboot()
}

export fn pm_suspend() {
  foundation.serial_write_string("[PM] Suspending...\n")
  pm_state = PM_STATE_SUSPEND
  foundation.hlt()
}

export fn pm_get_state() -> u32 {
  return pm_state
}
