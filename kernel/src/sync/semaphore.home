// home-os Semaphore
// Counting semaphore

import "../core/foundation.home" as foundation

export struct Semaphore {
  count: u32,
  wait_queue: u64
}

export fn semaphore_init(sem: u64, initial: u32) {
  @ptrToInt(sem, u32) = initial
  @ptrToInt(sem + 4, u64) = 0
}

export fn semaphore_wait(sem: u64) {
  while true {
    var count: u32 = @intToPtr(sem, u32)
    if count > 0 {
      @ptrToInt(sem, u32) = count - 1
      break
    }
    foundation.hlt()
  }
}

export fn semaphore_post(sem: u64) {
  var count: u32 = @intToPtr(sem, u32)
  @ptrToInt(sem, u32) = count + 1
}

export fn semaphore_try_wait(sem: u64) -> u32 {
  var count: u32 = @intToPtr(sem, u32)
  if count > 0 {
    @ptrToInt(sem, u32) = count - 1
    return 1
  }
  return 0
}

export fn semaphore_get_value(sem: u64) -> u32 {
  return @intToPtr(sem, u32)
}
