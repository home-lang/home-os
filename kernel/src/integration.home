// home-os Integration Module
// Seamlessly integrates Pantry, Den, and Craft with the kernel
// This is the main integration point for all external libraries

import "lib/pantry_lib.home" as pantry
import "lib/den_lib.home" as den  
import "lib/craft_lib.home" as craft

// ============================================================================
// SYSTEM INITIALIZATION
// ============================================================================

export fn init_all_integrations() -> u32 {
  // Initialize all integrated libraries
  pantry.pantry_init()
  den.den_init()
  craft.craft_init()
  
  return 0
}

// ============================================================================
// PANTRY INTEGRATION (Package Manager from ~/Code/pantry)
// ============================================================================

export fn sys_pantry_install(pkg_name: u64, version: u64) -> u32 {
  return pantry.pantry_install(pkg_name, version)
}

export fn sys_pantry_remove(pkg_name: u64) -> u32 {
  return pantry.pantry_remove(pkg_name)
}

export fn sys_pantry_update(pkg_name: u64) -> u32 {
  return pantry.pantry_update(pkg_name)
}

export fn sys_pantry_list() -> u32 {
  return pantry.pantry_list()
}

export fn sys_pantry_search(query: u64) -> u32 {
  return pantry.pantry_search(query)
}

export fn sys_pantry_env_create(name: u64, path: u64) -> u32 {
  return pantry.pantry_env_create(name, path)
}

export fn sys_pantry_env_activate(name: u64) -> u32 {
  return pantry.pantry_env_activate(name)
}

export fn sys_pantry_service_start(name: u64) -> u32 {
  return pantry.pantry_service_start(name)
}

export fn sys_pantry_service_stop(name: u64) -> u32 {
  return pantry.pantry_service_stop(name)
}

export fn sys_pantry_service_status(name: u64) -> u32 {
  return pantry.pantry_service_status(name)
}

// ============================================================================
// DEN SHELL INTEGRATION (Shell from ~/Code/den)
// ============================================================================

export fn sys_shell_execute(command: u64) -> u32 {
  return den.den_execute(command)
}

export fn sys_shell_setenv(name: u64, value: u64) -> u32 {
  return den.den_setenv(name, value)
}

export fn sys_shell_getenv(name: u64) -> u64 {
  return den.den_getenv(name)
}

export fn sys_shell_alias(name: u64, value: u64) -> u32 {
  return den.den_alias(name, value)
}

export fn sys_shell_history_add(command: u64, exit_code: u32) -> u32 {
  return den.den_history_add(command, exit_code)
}

export fn sys_shell_job_add(command: u64, pid: u32, background: u32) -> u32 {
  return den.den_job_add(command, pid, background)
}

export fn sys_shell_job_list() -> u32 {
  return den.den_job_list()
}

export fn sys_shell_get_cwd() -> u64 {
  return den.den_get_cwd()
}

export fn sys_shell_set_cwd(path: u64) -> u32 {
  return den.den_set_cwd(path)
}

// ============================================================================
// CRAFT UI INTEGRATION (UI from ~/Code/craft)
// ============================================================================

export fn sys_ui_window_create(x: u32, y: u32, width: u32, height: u32, title: u64) -> u32 {
  return craft.craft_window_create(x, y, width, height, title)
}

export fn sys_ui_window_destroy(window_id: u32) -> u32 {
  return craft.craft_window_destroy(window_id)
}

export fn sys_ui_window_move(window_id: u32, x: u32, y: u32) -> u32 {
  return craft.craft_window_move(window_id, x, y)
}

export fn sys_ui_window_resize(window_id: u32, width: u32, height: u32) -> u32 {
  return craft.craft_window_resize(window_id, width, height)
}

export fn sys_ui_window_focus(window_id: u32) -> u32 {
  return craft.craft_window_focus(window_id)
}

export fn sys_ui_widget_create(window_id: u32, widget_type: u32, x: u32, y: u32, width: u32, height: u32, text: u64) -> u32 {
  return craft.craft_widget_create(window_id, widget_type, x, y, width, height, text)
}

export fn sys_ui_widget_set_text(widget_id: u32, text: u64) -> u32 {
  return craft.craft_widget_set_text(widget_id, text)
}

export fn sys_ui_notification_show(title: u64, message: u64, priority: u32, timeout: u32) -> u32 {
  return craft.craft_notification_show(title, message, priority, timeout)
}

export fn sys_ui_compositor_render() -> u32 {
  return craft.craft_compositor_render()
}

// ============================================================================
// INTEGRATED WORKFLOWS
// ============================================================================

// Install package and notify user
export fn install_package_with_notification(pkg_name: u64, version: u64) -> u32 {
  var result: u32 = pantry.pantry_install(pkg_name, version)
  
  if result == 0 {
    craft.craft_notification_show("Package Installed", pkg_name, 1, 5000)
  } else {
    craft.craft_notification_show("Installation Failed", pkg_name, 2, 5000)
  }
  
  return result
}

// Execute shell command and add to history
export fn execute_command_with_history(command: u64) -> u32 {
  var result: u32 = den.den_execute(command)
  den.den_history_add(command, result)
  return result
}

// Start service and notify
export fn start_service_with_notification(service_name: u64) -> u32 {
  var result: u32 = pantry.pantry_service_start(service_name)
  
  if result == 0 {
    craft.craft_notification_show("Service Started", service_name, 1, 3000)
  } else {
    craft.craft_notification_show("Service Start Failed", service_name, 2, 5000)
  }
  
  return result
}
