// home-os Kernel - Main Entry Point
// Clean, modular kernel with library integrations

// Import core kernel modules
import "kernel.home" as kernel

// Import integration libraries
import "lib/pantry_lib.home" as pantry
import "lib/den_lib.home" as den
import "lib/craft_lib.home" as craft
import "integration.home" as integration

// ============================================================================
// KERNEL INITIALIZATION
// ============================================================================

fn init_all_systems() {
  // Initialize core kernel (Phases 1-7)
  kernel.kernel_init_phase1()  // Foundation
  kernel.kernel_init_phase2()  // Process Management
  kernel.kernel_init_phase3()  // Advanced Features
  kernel.kernel_init_phase4()  // File System
  kernel.kernel_init_phase5()  // Device Management
  kernel.kernel_init_phase6()  // Networking
  kernel.kernel_init_phase7()  // User Space
  
  // Initialize integrations (Phase 8+)
  integration.init_all_integrations()
}

// ============================================================================
// MAIN KERNEL ENTRY
// ============================================================================

export fn kernel_main(magic: u32, boot_info: u32) -> never {
  // Disable interrupts during initialization
  kernel.cli()
  
  // Initialize all systems
  init_all_systems()
  
  // Enable interrupts
  kernel.sti()
  
  // Kernel is now running
  kernel.serial_write_string("[Kernel] home-os initialized successfully\n")
  kernel.vga_write_string("home-os ready!\n")
  
  // Enter idle loop
  while true {
    kernel.hlt()
  }
}
