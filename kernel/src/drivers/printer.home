// home-os Printer Driver
// Print support

import "../core/foundation.home" as foundation

const PRINTER_STATUS_IDLE: u32 = 0
const PRINTER_STATUS_PRINTING: u32 = 1
const PRINTER_STATUS_ERROR: u32 = 2

struct PrintJob {
  id: u32,
  pages: u32,
  copies: u32,
  status: u32
}

var printer_initialized: u32 = 0
var printer_status: u32 = PRINTER_STATUS_IDLE
var job_queue: [PrintJob; 16]
var job_count: u32 = 0

export fn printer_init() {
  if printer_initialized == 1 { return }
  
  printer_status = PRINTER_STATUS_IDLE
  job_count = 0
  printer_initialized = 1
  foundation.serial_write_string("[Printer] Initialized\n")
}

export fn printer_submit_job(pages: u32, copies: u32) -> u32 {
  if printer_initialized == 0 { return 0xFFFFFFFF }
  if job_count >= 16 { return 0xFFFFFFFF }
  
  job_queue[job_count].id = job_count
  job_queue[job_count].pages = pages
  job_queue[job_count].copies = copies
  job_queue[job_count].status = PRINTER_STATUS_IDLE
  
  var id: u32 = job_count
  job_count = job_count + 1
  
  foundation.serial_write_string("[Printer] Job submitted\n")
  return id
}

export fn printer_get_status() -> u32 {
  return printer_status
}

export fn printer_cancel_job(job_id: u32) {
  if job_id >= job_count { return }
  job_queue[job_id].status = PRINTER_STATUS_ERROR
}
