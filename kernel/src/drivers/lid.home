// home-os Lid Switch Driver
// Laptop lid detection

import "../core/foundation.home" as foundation

const LID_OPEN: u32 = 0
const LID_CLOSED: u32 = 1

var lid_state: u32 = LID_OPEN
var lid_callback: u64 = 0

export fn lid_init() {
  lid_state = LID_OPEN
  foundation.serial_write_string("[Lid] Initialized\n")
}

export fn lid_register_callback(callback: u64) {
  lid_callback = callback
}

export fn lid_interrupt_handler() {
  // Read lid state from hardware
  var new_state: u32 = LID_OPEN  // Stub
  
  if new_state != lid_state {
    lid_state = new_state
    
    if lid_state == LID_CLOSED {
      foundation.serial_write_string("[Lid] Closed\n")
    } else {
      foundation.serial_write_string("[Lid] Opened\n")
    }
    
    if lid_callback != 0 {
      // Call callback (stub)
    }
  }
}

export fn lid_get_state() -> u32 {
  return lid_state
}

export fn lid_is_closed() -> u32 {
  return lid_state == LID_CLOSED
}
