// home-os WiFi Driver
// Wireless network support

import "../core/foundation.home" as foundation

const WIFI_MODE_STATION: u32 = 0
const WIFI_MODE_AP: u32 = 1

const MAX_SSIDS: u32 = 32

struct WifiNetwork {
  ssid: [u8; 32],
  signal: u8,
  channel: u8,
  encrypted: u32
}

var wifi_networks: [WifiNetwork; 32]
var wifi_network_count: u32 = 0
var wifi_connected: u32 = 0
var wifi_mode: u32 = WIFI_MODE_STATION

export fn wifi_init() {
  wifi_network_count = 0
  wifi_connected = 0
  foundation.serial_write_string("[WiFi] Initialized\n")
}

export fn wifi_scan() -> u32 {
  wifi_network_count = 0
  foundation.serial_write_string("[WiFi] Scanning...\n")
  
  // Stub: would scan for networks
  return wifi_network_count
}

export fn wifi_connect(ssid: u64, password: u64) -> u32 {
  foundation.serial_write_string("[WiFi] Connecting to ")
  foundation.serial_write_string(ssid)
  foundation.serial_write_string("...\n")
  
  wifi_connected = 1
  return 0
}

export fn wifi_disconnect() {
  wifi_connected = 0
  foundation.serial_write_string("[WiFi] Disconnected\n")
}

export fn wifi_is_connected() -> u32 {
  return wifi_connected
}

export fn wifi_get_rssi() -> i8 {
  return -50  // Stub
}

export fn wifi_set_mode(mode: u32) {
  wifi_mode = mode
}
