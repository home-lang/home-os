// home-os Hardware Monitoring
// Temperature, voltage, fan sensors

import "../core/foundation.home" as foundation

const HWMON_TEMP: u32 = 0
const HWMON_VOLTAGE: u32 = 1
const HWMON_FAN: u32 = 2

const MAX_SENSORS: u32 = 32

struct Sensor {
  type: u32,
  value: u32,
  min: u32,
  max: u32,
  name: [u8; 32]
}

var sensors: [Sensor; 32]
var sensor_count: u32 = 0

export fn hwmon_init() {
  sensor_count = 0
  foundation.serial_write_string("[HWMon] Hardware monitoring initialized\n")
}

export fn hwmon_register_sensor(type: u32, name: u64) -> u32 {
  if sensor_count >= MAX_SENSORS { return 0xFFFFFFFF }
  
  sensors[sensor_count].type = type
  sensors[sensor_count].value = 0
  sensors[sensor_count].min = 0
  sensors[sensor_count].max = 100
  
  var i: u32 = 0
  while i < 32 {
    sensors[sensor_count].name[i] = @intToPtr(name + i, u8)
    if sensors[sensor_count].name[i] == 0 { break }
    i = i + 1
  }
  
  var id: u32 = sensor_count
  sensor_count = sensor_count + 1
  
  return id
}

export fn hwmon_read_sensor(sensor_id: u32) -> u32 {
  if sensor_id >= sensor_count { return 0 }
  
  // Read from hardware (stub)
  if sensors[sensor_id].type == HWMON_TEMP {
    sensors[sensor_id].value = 45  // 45Â°C
  } else if sensors[sensor_id].type == HWMON_FAN {
    sensors[sensor_id].value = 2000  // 2000 RPM
  }
  
  return sensors[sensor_id].value
}

export fn hwmon_get_sensor_count() -> u32 {
  return sensor_count
}
