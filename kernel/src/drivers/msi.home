// home-os MSI/MSI-X
// Message Signaled Interrupts

import "../core/foundation.home" as foundation
import "pci.home" as pci

const MSI_CAPABILITY_ID: u8 = 0x05
const MSIX_CAPABILITY_ID: u8 = 0x11

struct MsiCapability {
  control: u16,
  address_lo: u32,
  address_hi: u32,
  data: u16
}

var msi_initialized: u32 = 0

export fn msi_init() {
  if msi_initialized == 1 { return }
  
  msi_initialized = 1
  foundation.serial_write_string("[MSI] Initialized\n")
}

export fn msi_enable(device: u64, vector: u32) -> u32 {
  if msi_initialized == 0 { return 1 }
  
  foundation.serial_write_string("[MSI] Enabling MSI for device\n")
  
  // Configure MSI (stub)
  return 0
}

export fn msix_enable(device: u64, vectors: u32) -> u32 {
  if msi_initialized == 0 { return 1 }
  
  foundation.serial_write_string("[MSI-X] Enabling MSI-X with ")
  foundation.serial_write_string(" vectors\n")
  
  // Configure MSI-X (stub)
  return 0
}
