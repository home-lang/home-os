// home-os Vulkan API
// Modern graphics API

import "../core/foundation.home" as foundation
import "../drivers/gpu.home" as gpu

const VK_SUCCESS: u32 = 0
const VK_ERROR_OUT_OF_HOST_MEMORY: u32 = 0xFFFFFFFF

struct VkInstance {
  handle: u64
}

struct VkDevice {
  handle: u64
}

var vulkan_initialized: u32 = 0

export fn vkCreateInstance(info: u64, allocator: u64, instance: u64) -> u32 {
  if vulkan_initialized == 0 {
    gpu.gpu_init()
    vulkan_initialized = 1
  }
  
  foundation.serial_write_string("[Vulkan] Instance created\n")
  return VK_SUCCESS
}

export fn vkEnumeratePhysicalDevices(instance: u64, count: u64, devices: u64) -> u32 {
  @ptrToInt(count, u32) = 1
  return VK_SUCCESS
}

export fn vkCreateDevice(physical_device: u64, info: u64, allocator: u64, device: u64) -> u32 {
  foundation.serial_write_string("[Vulkan] Device created\n")
  return VK_SUCCESS
}
