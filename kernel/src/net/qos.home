// home-os QoS
// Quality of Service

import "../core/foundation.home" as foundation

const QOS_CLASS_REALTIME: u32 = 0
const QOS_CLASS_INTERACTIVE: u32 = 1
const QOS_CLASS_BULK: u32 = 2

struct QosQueue {
  class: u32,
  priority: u32,
  bandwidth_limit: u32,
  packets_queued: u32
}

var qos_queues: [QosQueue; 8]
var qos_queue_count: u32 = 0

export fn qos_init() {
  qos_queue_count = 0
  foundation.serial_write_string("[QoS] Initialized\n")
}

export fn qos_create_queue(class: u32, priority: u32, bandwidth: u32) -> u32 {
  if qos_queue_count >= 8 { return 0xFFFFFFFF }
  
  qos_queues[qos_queue_count].class = class
  qos_queues[qos_queue_count].priority = priority
  qos_queues[qos_queue_count].bandwidth_limit = bandwidth
  qos_queues[qos_queue_count].packets_queued = 0
  
  var id: u32 = qos_queue_count
  qos_queue_count = qos_queue_count + 1
  
  return id
}

export fn qos_enqueue_packet(queue_id: u32, packet: u64, length: u32) -> u32 {
  if queue_id >= qos_queue_count { return 1 }
  
  qos_queues[queue_id].packets_queued = qos_queues[queue_id].packets_queued + 1
  return 0
}

export fn qos_get_next_packet() -> u32 {
  // Get highest priority packet (stub)
  return 0
}
