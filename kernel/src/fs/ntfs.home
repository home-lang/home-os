// home-os NTFS
// Windows NTFS filesystem (read-only)

import "../core/foundation.home" as foundation
import "../drivers/ata.home" as ata

const NTFS_MAGIC: u64 = 0x5346544E  // "NTFS"

struct NtfsBootSector {
  jump: [u8; 3],
  oem_id: [u8; 8],
  bytes_per_sector: u16,
  sectors_per_cluster: u8,
  reserved: u16,
  unused1: [u8; 3],
  unused2: u16,
  media: u8,
  unused3: u16,
  sectors_per_track: u16,
  heads: u16,
  hidden_sectors: u32,
  unused4: u32,
  unused5: u32,
  total_sectors: u64,
  mft_cluster: u64,
  mft_mirror_cluster: u64
}

var ntfs_initialized: u32 = 0
var boot_sector: NtfsBootSector

export fn ntfs_init() {
  if ntfs_initialized == 1 { return }
  
  var buffer: [u8; 512]
  ata.ata_read_sector(0, 0, @ptrFromInt(buffer))
  
  boot_sector = @intToPtr(@ptrFromInt(buffer), NtfsBootSector)
  
  ntfs_initialized = 1
  foundation.serial_write_string("[NTFS] Initialized (read-only)\n")
}

export fn ntfs_read_file(path: u64, buffer: u64, size: u32) -> u32 {
  if ntfs_initialized == 0 { return 0 }
  
  // Read file from MFT (stub)
  return 0
}
