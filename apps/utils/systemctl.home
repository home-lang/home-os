// home-os Systemctl
// Service management

import "../../kernel/src/core/foundation.home" as foundation

const MAX_SERVICES: u32 = 32

struct Service {
  name: [u8; 64],
  enabled: u32,
  running: u32
}

var services: [Service; 32]
var service_count: u32 = 0

fn systemctl_init_services() {
  // Register default services (stub)
  service_count = 3
  
  var i: u32 = 0
  while i < 5 {
    services[0].name[i] = "sshd"[i]
    i = i + 1
  }
  services[0].enabled = 1
  services[0].running = 1
}

export fn systemctl_main(command: u64, service: u64) {
  foundation.vga_clear()
  foundation.vga_write_string("=== Systemctl ===\n\n")
  
  if service_count == 0 {
    systemctl_init_services()
  }
  
  // Parse command (stub)
  foundation.vga_write_string("Command: ")
  foundation.vga_write_string(command)
  foundation.vga_write_string("\nService: ")
  foundation.vga_write_string(service)
  foundation.vga_write_string("\n\n")
  
  foundation.vga_write_string("Service operation completed\n")
}

export fn systemctl_list() {
  foundation.vga_clear()
  foundation.vga_write_string("=== Services ===\n\n")
  foundation.vga_write_string("UNIT          LOAD   ACTIVE   SUB     DESCRIPTION\n")
  foundation.vga_write_string("----          ----   ------   ---     -----------\n")
  foundation.vga_write_string("sshd.service  loaded active   running SSH Daemon\n")
  foundation.vga_write_string("httpd.service loaded active   running Web Server\n")
}
