// home-os SHA256sum
// Calculate SHA256 checksums

import "../../kernel/src/core/foundation.home" as foundation
import "../../kernel/src/core/filesystem.home" as filesystem
import "../../kernel/src/crypto/sha256.home" as sha256

export fn sha256sum_main(file: u64) {
  foundation.vga_clear()
  foundation.vga_write_string("=== SHA256sum ===\n\n")
  
  var fd: u32 = filesystem.vfs_open(file, 0)
  if fd == 0 {
    foundation.vga_write_string("File not found\n")
    return
  }
  
  var buffer: [u8; 4096]
  var bytes: u64 = filesystem.vfs_read(fd, @ptrFromInt(buffer), 4096)
  
  var digest: [u8; 32]
  sha256.sha256_hash(@ptrFromInt(buffer), bytes, @ptrFromInt(digest))
  
  // Display hash
  var i: u32 = 0
  while i < 32 {
    foundation.vga_write_string(" ")
    i = i + 1
  }
  foundation.vga_write_string("  ")
  foundation.vga_write_string(file)
  foundation.vga_write_string("\n")
  
  filesystem.vfs_close(fd)
}
