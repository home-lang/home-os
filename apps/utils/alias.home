// home-os Alias
// Create command aliases

import "../../kernel/src/core/foundation.home" as foundation

const MAX_ALIASES: u32 = 32

struct Alias {
  name: [u8; 64],
  command: [u8; 256],
  set: u32
}

var aliases: [Alias; 32]
var alias_count: u32 = 0

export fn alias_set(name: u64, command: u64) {
  if alias_count >= MAX_ALIASES { return }
  
  var i: u32 = 0
  while i < 64 {
    aliases[alias_count].name[i] = @intToPtr(name + i, u8)
    if aliases[alias_count].name[i] == 0 { break }
    i = i + 1
  }
  
  i = 0
  while i < 256 {
    aliases[alias_count].command[i] = @intToPtr(command + i, u8)
    if aliases[alias_count].command[i] == 0 { break }
    i = i + 1
  }
  
  aliases[alias_count].set = 1
  alias_count = alias_count + 1
}

export fn alias_main() {
  foundation.vga_clear()
  foundation.vga_write_string("=== Aliases ===\n\n")
  
  // Set default aliases
  if alias_count == 0 {
    alias_set("ll", "ls -la")
    alias_set("la", "ls -a")
    alias_set("l", "ls -CF")
  }
  
  var i: u32 = 0
  while i < alias_count {
    if aliases[i].set == 1 {
      foundation.vga_write_string("alias ")
      foundation.vga_write_string(@ptrFromInt(aliases[i].name))
      foundation.vga_write_string("='")
      foundation.vga_write_string(@ptrFromInt(aliases[i].command))
      foundation.vga_write_string("'\n")
    }
    i = i + 1
  }
}
