// home-os Strings
// Extract printable strings from binary

import "../../kernel/src/core/foundation.home" as foundation
import "../../kernel/src/core/filesystem.home" as filesystem

fn is_printable(ch: u8) -> u32 {
  if ch >= 32 and ch <= 126 { return 1 }
  return 0
}

export fn strings_main(file: u64) {
  foundation.vga_clear()
  foundation.vga_write_string("=== Strings ===\n\n")
  
  var fd: u32 = filesystem.vfs_open(file, 0)
  if fd == 0 {
    foundation.vga_write_string("File not found\n")
    return
  }
  
  var buffer: [u8; 1024]
  var bytes: u64 = filesystem.vfs_read(fd, @ptrFromInt(buffer), 1024)
  
  var current_string: [u8; 256]
  var str_len: u32 = 0
  
  var i: u32 = 0
  while i < bytes {
    if is_printable(buffer[i]) == 1 {
      if str_len < 255 {
        current_string[str_len] = buffer[i]
        str_len = str_len + 1
      }
    } else {
      if str_len >= 4 {
        current_string[str_len] = 0
        foundation.vga_write_string(@ptrFromInt(current_string))
        foundation.vga_write_string("\n")
      }
      str_len = 0
    }
    i = i + 1
  }
  
  filesystem.vfs_close(fd)
}
