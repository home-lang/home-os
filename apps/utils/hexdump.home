// home-os Hexdump
// Display file in hexadecimal

import "../../kernel/src/core/foundation.home" as foundation
import "../../kernel/src/core/filesystem.home" as filesystem

export fn hexdump_main(file: u64) {
  foundation.vga_clear()
  foundation.vga_write_string("=== Hexdump ===\n\n")
  
  var fd: u32 = filesystem.vfs_open(file, 0)
  if fd == 0 {
    foundation.vga_write_string("File not found\n")
    return
  }
  
  var buffer: [u8; 256]
  var bytes: u64 = filesystem.vfs_read(fd, @ptrFromInt(buffer), 256)
  
  var offset: u32 = 0
  while offset < bytes {
    // Display offset
    foundation.vga_write_string("  ")
    
    // Display hex bytes
    var i: u32 = 0
    while i < 16 and offset + i < bytes {
      foundation.vga_write_string(" ")
      i = i + 1
    }
    
    foundation.vga_write_string("\n")
    offset = offset + 16
  }
  
  filesystem.vfs_close(fd)
}
