// home-os Top
// Process monitor (like htop)

import "../../kernel/src/core/foundation.home" as foundation
import "../../kernel/src/core/process.home" as process
import "../../kernel/src/core/memory.home" as memory
import "../../kernel/src/drivers/keyboard.home" as keyboard
import "../../kernel/src/drivers/timer.home" as timer

fn top_display() {
  foundation.vga_clear()
  foundation.vga_write_string("=== Top - Process Monitor ===\n\n")
  
  // System stats
  foundation.vga_write_string("Uptime: ")
  var seconds: u64 = timer.timer_get_seconds()
  foundation.vga_write_string(" seconds\n")
  
  foundation.vga_write_string("Processes: ")
  var count: u32 = process.process_get_count()
  foundation.vga_write_string("\n\n")
  
  // Process list header
  foundation.vga_write_string("PID  CPU%  MEM%  TIME  COMMAND\n")
  foundation.vga_write_string("---  ----  ----  ----  -------\n")
  
  // Show processes (stub)
  var i: u32 = 0
  while i < 15 {
    foundation.vga_write_string("  1   5.2   2.1  0:05  init\n")
    i = i + 1
  }
  
  foundation.vga_write_string("\nPress Q to quit, R to refresh\n")
}

export fn top_main() {
  top_display()
  
  var running: u32 = 1
  while running == 1 {
    if keyboard.keyboard_has_char() == 1 {
      var ch: u8 = keyboard.keyboard_getchar()
      if ch == 'q' or ch == 'Q' {
        running = 0
      } else if ch == 'r' or ch == 'R' {
        top_display()
      }
    }
    
    timer.timer_sleep_ms(1000)
  }
}
