// home-os Tree
// Directory tree visualization

import "../../kernel/src/core/foundation.home" as foundation
import "../../kernel/src/core/filesystem.home" as filesystem

const MAX_DEPTH: u32 = 10

fn tree_print_indent(depth: u32, is_last: u32) {
  var i: u32 = 0
  while i < depth {
    if i == depth - 1 {
      if is_last == 1 {
        foundation.vga_write_string("└── ")
      } else {
        foundation.vga_write_string("├── ")
      }
    } else {
      foundation.vga_write_string("│   ")
    }
    i = i + 1
  }
}

fn tree_recursive(path: u64, depth: u32, max_depth: u32) {
  if depth >= max_depth { return }
  
  // Read directory entries (stub)
  var entries: [u8; 5] = ["dir1", "dir2", "file1.txt", "file2.txt", "script.sh"]
  var count: u32 = 5
  
  var i: u32 = 0
  while i < count {
    var is_last: u32 = 0
    if i == count - 1 { is_last = 1 }
    
    tree_print_indent(depth, is_last)
    
    // Color directories
    foundation.vga_set_color(0x09)
    foundation.vga_write_string("entry")
    foundation.vga_set_color(0x0F)
    foundation.vga_write_string("\n")
    
    i = i + 1
  }
}

export fn tree_main(path: u64, max_depth: u32) {
  foundation.vga_clear()
  foundation.vga_write_string("=== Directory Tree ===\n\n")
  
  if max_depth == 0 { max_depth = MAX_DEPTH }
  
  foundation.vga_write_string(path)
  foundation.vga_write_string("\n")
  
  tree_recursive(path, 1, max_depth)
  
  foundation.vga_write_string("\n5 directories, 10 files\n")
}
