// home-os Tail
// Display last lines of file

import "../../kernel/src/core/foundation.home" as foundation
import "../../kernel/src/core/filesystem.home" as filesystem

export fn tail_main(file: u64, lines: u32) {
  if lines == 0 { lines = 10 }
  
  var fd: u32 = filesystem.vfs_open(file, 0)
  if fd == 0 {
    foundation.vga_write_string("tail: cannot open ")
    foundation.vga_write_string(file)
    foundation.vga_write_string("\n")
    return
  }
  
  var buffer: [u8; 4096]
  var bytes: u64 = filesystem.vfs_read(fd, @ptrFromInt(buffer), 4096)
  
  // Count total lines
  var total_lines: u32 = 0
  var i: u32 = 0
  while i < bytes {
    if buffer[i] == '\n' {
      total_lines = total_lines + 1
    }
    i = i + 1
  }
  
  // Find start position
  var start_line: u32 = 0
  if total_lines > lines {
    start_line = total_lines - lines
  }
  
  // Display from start_line
  var line_count: u32 = 0
  i = 0
  while i < bytes {
    if line_count >= start_line {
      foundation.vga_write_char(buffer[i])
    }
    if buffer[i] == '\n' {
      line_count = line_count + 1
    }
    i = i + 1
  }
  
  filesystem.vfs_close(fd)
}
