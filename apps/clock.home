// home-os Clock Application
// Digital clock display

import "../kernel/src/core/foundation.home" as foundation
import "../kernel/src/drivers/rtc.home" as rtc
import "../kernel/src/drivers/keyboard.home" as keyboard

fn clock_display() {
  foundation.vga_clear()
  foundation.vga_write_string("=== Digital Clock ===\n\n")
  
  var hour: u8 = rtc.rtc_get_hour()
  var minute: u8 = rtc.rtc_get_minute()
  var second: u8 = rtc.rtc_get_second()
  
  foundation.vga_write_string("Time: ")
  
  if hour < 10 { foundation.vga_write_string("0") }
  foundation.vga_write_string(":")
  
  if minute < 10 { foundation.vga_write_string("0") }
  foundation.vga_write_string(":")
  
  if second < 10 { foundation.vga_write_string("0") }
  foundation.vga_write_string("\n\n")
  
  var day: u8 = rtc.rtc_get_day()
  var month: u8 = rtc.rtc_get_month()
  var year: u16 = rtc.rtc_get_year()
  
  foundation.vga_write_string("Date: ")
  
  if day < 10 { foundation.vga_write_string("0") }
  foundation.vga_write_string("/")
  
  if month < 10 { foundation.vga_write_string("0") }
  foundation.vga_write_string("/")
  foundation.vga_write_string("\n\n")
  
  foundation.vga_write_string("Press Q to quit")
}

export fn clock_main() {
  var running: u32 = 1
  var last_second: u8 = 0xFF
  
  while running == 1 {
    var second: u8 = rtc.rtc_get_second()
    
    if second != last_second {
      clock_display()
      last_second = second
    }
    
    if keyboard.keyboard_has_char() == 1 {
      var ch: u8 = keyboard.keyboard_getchar()
      if ch == 'q' or ch == 'Q' {
        running = 0
      }
    }
    
    foundation.hlt()
  }
}
