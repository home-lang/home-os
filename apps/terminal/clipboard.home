// home-os Terminal Clipboard Support
// Copy/paste functionality for terminal

import "../../kernel/src/core/foundation.home" as foundation

const MAX_CLIPBOARD_SIZE: u32 = 65536

var clipboard_buffer: [u8; 65536]
var clipboard_size: u32 = 0
var clipboard_initialized: u32 = 0

export fn clipboard_init() {
  if clipboard_initialized == 1 { return }
  
  clipboard_size = 0
  clipboard_initialized = 1
  foundation.serial_write_string("[Clipboard] Initialized\n")
}

export fn clipboard_copy(data: u64, size: u32) {
  if size > MAX_CLIPBOARD_SIZE {
    size = MAX_CLIPBOARD_SIZE
  }
  
  var i: u32 = 0
  while i < size {
    clipboard_buffer[i] = @intToPtr(data + i, u8)
    i = i + 1
  }
  
  clipboard_size = size
  foundation.serial_write_string("[Clipboard] Copied ")
  foundation.serial_write_hex(size)
  foundation.serial_write_string(" bytes\n")
}

export fn clipboard_paste(dest: u64, max_size: u32) -> u32 {
  var size: u32 = clipboard_size
  if size > max_size {
    size = max_size
  }
  
  var i: u32 = 0
  while i < size {
    @intToPtr(dest + i, u8) = clipboard_buffer[i]
    i = i + 1
  }
  
  return size
}

export fn clipboard_get_size() -> u32 {
  return clipboard_size
}

export fn clipboard_clear() {
  clipboard_size = 0
}

export fn clipboard_has_data() -> u32 {
  if clipboard_size > 0 { return 1 }
  return 0
}

// Selection support
var selection_start_x: u32 = 0
var selection_start_y: u32 = 0
var selection_end_x: u32 = 0
var selection_end_y: u32 = 0
var selection_active: u32 = 0

export fn clipboard_start_selection(x: u32, y: u32) {
  selection_start_x = x
  selection_start_y = y
  selection_end_x = x
  selection_end_y = y
  selection_active = 1
}

export fn clipboard_update_selection(x: u32, y: u32) {
  if selection_active == 0 { return }
  
  selection_end_x = x
  selection_end_y = y
}

export fn clipboard_end_selection() {
  selection_active = 0
}

export fn clipboard_is_selecting() -> u32 {
  return selection_active
}

export fn clipboard_get_selection_start_x() -> u32 {
  return selection_start_x
}

export fn clipboard_get_selection_start_y() -> u32 {
  return selection_start_y
}

export fn clipboard_get_selection_end_x() -> u32 {
  return selection_end_x
}

export fn clipboard_get_selection_end_y() -> u32 {
  return selection_end_y
}
