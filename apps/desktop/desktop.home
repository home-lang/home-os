// home-os Desktop Environment
// Complete desktop with panels, menus, system tray

import "../../kernel/src/core/foundation.home" as foundation
import "../../kernel/src/drivers/framebuffer.home" as fb
import "../../kernel/src/drivers/mouse.home" as mouse
import "../../kernel/src/drivers/keyboard.home" as keyboard
import "window_manager.home" as wm
import "craft_bridge.home" as craft

const PANEL_HEIGHT: u32 = 40
const SYSTRAY_WIDTH: u32 = 200

struct MenuItem {
  label: [u8; 64],
  callback: u64,
  enabled: u32
}

struct Menu {
  items: [MenuItem; 20],
  item_count: u32,
  visible: u32,
  x: u32,
  y: u32
}

struct SystrayIcon {
  icon: [u8; 32],
  tooltip: [u8; 128],
  callback: u64,
  visible: u32
}

var desktop_initialized: u32 = 0
var main_menu: Menu
var systray_icons: [SystrayIcon; 10]
var systray_count: u32 = 0

export fn desktop_init() {
  if desktop_initialized == 1 { return }
  
  fb.fb_init(0xFD000000, 1920, 1080)
  wm.wm_init()
  craft.craft_init()
  
  main_menu.item_count = 0
  main_menu.visible = 0
  systray_count = 0
  
  desktop_initialized = 1
  foundation.serial_write_string("[Desktop] Environment initialized\n")
}

export fn desktop_add_menu_item(label: u64, callback: u64) {
  if main_menu.item_count >= 20 { return }
  
  var i: u32 = 0
  while i < 64 {
    main_menu.items[main_menu.item_count].label[i] = @intToPtr(label + i, u8)
    if main_menu.items[main_menu.item_count].label[i] == 0 { break }
    i = i + 1
  }
  
  main_menu.items[main_menu.item_count].callback = callback
  main_menu.items[main_menu.item_count].enabled = 1
  main_menu.item_count = main_menu.item_count + 1
}

export fn desktop_add_systray_icon(icon: u64, tooltip: u64, callback: u64) {
  if systray_count >= 10 { return }
  
  var i: u32 = 0
  while i < 32 {
    systray_icons[systray_count].icon[i] = @intToPtr(icon + i, u8)
    if systray_icons[systray_count].icon[i] == 0 { break }
    i = i + 1
  }
  
  i = 0
  while i < 128 {
    systray_icons[systray_count].tooltip[i] = @intToPtr(tooltip + i, u8)
    if systray_icons[systray_count].tooltip[i] == 0 { break }
    i = i + 1
  }
  
  systray_icons[systray_count].callback = callback
  systray_icons[systray_count].visible = 1
  systray_count = systray_count + 1
}

fn desktop_render_panel() {
  // Draw top panel
  fb.fb_fill_rect(0, 0, 1920, PANEL_HEIGHT, 0x2D2D2D)
  
  // Draw application menu button
  fb.fb_fill_rect(10, 5, 100, 30, 0x0078D4)
  fb.fb_draw_text(20, 13, "Applications", 0xFFFFFF)
  
  // Draw clock
  fb.fb_draw_text(850, 13, "17:30", 0xFFFFFF)
  
  // Draw system tray
  desktop_render_systray()
}

fn desktop_render_systray() {
  var x_offset: u32 = 1920 - SYSTRAY_WIDTH
  
  var i: u32 = 0
  while i < systray_count {
    if systray_icons[i].visible == 1 {
      fb.fb_draw_text(x_offset, 13, @ptrFromInt(systray_icons[i].icon), 0xFFFFFF)
      x_offset = x_offset + 30
    }
    i = i + 1
  }
}

fn desktop_render_menu() {
  if main_menu.visible == 0 { return }
  
  var menu_width: u32 = 200
  var menu_height: u32 = main_menu.item_count * 30 + 10
  
  // Draw menu background
  fb.fb_fill_rect(main_menu.x, main_menu.y, menu_width, menu_height, 0x3C3C3C)
  fb.fb_draw_rect(main_menu.x, main_menu.y, menu_width, menu_height, 0x666666)
  
  // Draw menu items
  var i: u32 = 0
  while i < main_menu.item_count {
    var y: u32 = main_menu.y + 5 + (i * 30)
    
    var text_color: u32 = 0xFFFFFF
    if main_menu.items[i].enabled == 0 {
      text_color = 0x666666
    }
    
    fb.fb_draw_text(main_menu.x + 10, y + 8, @ptrFromInt(main_menu.items[i].label), text_color)
    
    i = i + 1
  }
}

export fn desktop_render() {
  // Clear screen
  fb.fb_clear(0x1E1E1E)
  
  // Render windows
  wm.wm_render()
  
  // Render desktop panel
  desktop_render_panel()
  
  // Render menu if visible
  desktop_render_menu()
  
  fb.fb_present()
}

export fn desktop_main() {
  desktop_init()
  
  // Add default menu items
  desktop_add_menu_item("Terminal", 0)
  desktop_add_menu_item("Editor", 0)
  desktop_add_menu_item("File Manager", 0)
  desktop_add_menu_item("Settings", 0)
  desktop_add_menu_item("About", 0)
  
  // Add system tray icons
  desktop_add_systray_icon("ğŸ”Š", "Volume", 0)
  desktop_add_systray_icon("ğŸ”‹", "Battery", 0)
  desktop_add_systray_icon("ğŸ“¶", "Network", 0)
  
  // Create a demo window
  var window: u32 = wm.wm_create_window("Welcome to home-os", 400, 200, 600, 400)
  
  // Main event loop
  var running: u32 = 1
  while running == 1 {
    desktop_render()
    
    // Handle keyboard input
    if keyboard.keyboard_has_char() == 1 {
      var ch: u8 = keyboard.keyboard_getchar()
      
      if ch == 'q' or ch == 'Q' {
        running = 0
      }
    }
  }
}
