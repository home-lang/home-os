// home-os Web Browser
// Simple web browser

import "../kernel/src/core/foundation.home" as foundation
import "../kernel/src/net/http.home" as http
import "../kernel/src/net/dns.home" as dns
import "../kernel/src/drivers/keyboard.home" as keyboard

var current_url: [u8; 256]
var page_content: [u8; 4096]

fn browser_display() {
  foundation.vga_clear()
  foundation.vga_write_string("=== Web Browser ===\n\n")
  foundation.vga_write_string("URL: ")
  foundation.vga_write_string(@ptrFromInt(current_url))
  foundation.vga_write_string("\n\n")
  foundation.vga_write_string("--- Page Content ---\n")
  foundation.vga_write_string(@ptrFromInt(page_content))
  foundation.vga_write_string("\n\n")
  foundation.vga_write_string("Commands: G=Go N=New URL Q=Quit\n")
}

fn browser_fetch_page() {
  foundation.vga_write_string("Fetching page...\n")
  
  // Parse URL and fetch via HTTP (stub)
  var response: [u8; 4096]
  http.http_get(@ptrFromInt(current_url), @ptrFromInt(response))
  
  // Copy to page content
  var i: u32 = 0
  while i < 4096 {
    page_content[i] = response[i]
    if response[i] == 0 { break }
    i = i + 1
  }
}

export fn browser_main() {
  http.http_init()
  dns.dns_init()
  
  var i: u32 = 0
  while i < 256 {
    current_url[i] = 0
    i = i + 1
  }
  
  browser_display()
  
  var running: u32 = 1
  while running == 1 {
    while keyboard.keyboard_has_char() == 0 {}
    var ch: u8 = keyboard.keyboard_getchar()
    
    if ch == 'q' or ch == 'Q' {
      running = 0
    } else if ch == 'g' or ch == 'G' {
      browser_fetch_page()
      browser_display()
    } else if ch == 'n' or ch == 'N' {
      foundation.vga_write_string("\nEnter URL: ")
      keyboard.keyboard_getline(@ptrFromInt(current_url), 256)
      browser_display()
    }
  }
}
