// home-os Shell Application
// Simple shell using Den integration

import "../kernel/src/core/foundation.home" as foundation
import "../kernel/src/drivers/keyboard.home" as keyboard
import "../kernel/src/lib/den_lib.home" as den

var running: u32 = 1

fn shell_prompt() {
  foundation.vga_write_string("home-os> ")
}

fn shell_execute(cmd: u64, len: u32) {
  // Parse command
  var cmd_str: [u8; 256]
  var i: u32 = 0
  while i < len {
    cmd_str[i] = @intToPtr(cmd + i, u8)
    i = i + 1
  }
  cmd_str[len] = 0
  
  // Check built-in commands
  if len == 4 and cmd_str[0] == 'h' and cmd_str[1] == 'e' and cmd_str[2] == 'l' and cmd_str[3] == 'p' {
    foundation.vga_write_string("Available commands:\n")
    foundation.vga_write_string("  help - Show this help\n")
    foundation.vga_write_string("  clear - Clear screen\n")
    foundation.vga_write_string("  exit - Exit shell\n")
    foundation.vga_write_string("  echo - Echo text\n")
    return
  }
  
  if len == 5 and cmd_str[0] == 'c' and cmd_str[1] == 'l' and cmd_str[2] == 'e' and cmd_str[3] == 'a' and cmd_str[4] == 'r' {
    foundation.vga_clear()
    return
  }
  
  if len == 4 and cmd_str[0] == 'e' and cmd_str[1] == 'x' and cmd_str[2] == 'i' and cmd_str[3] == 't' {
    running = 0
    return
  }
  
  if len >= 4 and cmd_str[0] == 'e' and cmd_str[1] == 'c' and cmd_str[2] == 'h' and cmd_str[3] == 'o' {
    if len > 5 {
      i = 5
      while i < len {
        foundation.vga_write_char(cmd_str[i])
        i = i + 1
      }
    }
    foundation.vga_write_char('\n')
    return
  }
  
  // Try Den integration
  var result: u32 = den.den_execute_command(@ptrFromInt(cmd_str), len)
  if result != 0 {
    foundation.vga_write_string("Command not found\n")
  }
}

export fn shell_main() {
  foundation.vga_clear()
  foundation.vga_write_string("home-os Shell v1.0\n")
  foundation.vga_write_string("Type 'help' for commands\n\n")
  
  while running == 1 {
    shell_prompt()
    
    var input: [u8; 256]
    var len: u32 = keyboard.keyboard_getline(@ptrFromInt(input), 256)
    
    if len > 0 {
      shell_execute(@ptrFromInt(input), len)
    }
  }
  
  foundation.vga_write_string("Goodbye!\n")
}
