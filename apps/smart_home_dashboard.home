// home-os - Smart Home Dashboard
// Control and monitor smart home devices

import "../kernel/src/core/foundation.home" as foundation
import "../kernel/src/iot/home_automation.home" as home
import "../libs/craft/craft.home" as craft

var dashboard_window: u32 = 0
var device_list: u32 = 0
var status_label: u32 = 0

export fn dashboard_init() {
  dashboard_window = craft.window_create(1200, 800, @ptrFromInt("Smart Home Dashboard"))
  
  dashboard_create_ui()
  dashboard_refresh()
}

fn dashboard_create_ui() {
  // Title
  craft.label_create(dashboard_window, 20, 20, 400, 40, @ptrFromInt("Smart Home Control"))
  
  // Device list
  craft.label_create(dashboard_window, 20, 80, 200, 30, @ptrFromInt("Devices:"))
  device_list = craft.listbox_create(dashboard_window, 20, 120, 350, 600)
  
  // Control panel
  craft.label_create(dashboard_window, 400, 80, 200, 30, @ptrFromInt("Control:"))
  
  craft.button_create(dashboard_window, 400, 120, 150, 40, @ptrFromInt("Turn On"))
  craft.button_create(dashboard_window, 570, 120, 150, 40, @ptrFromInt("Turn Off"))
  
  craft.button_create(dashboard_window, 400, 180, 150, 40, @ptrFromInt("Dim"))
  craft.button_create(dashboard_window, 570, 180, 150, 40, @ptrFromInt("Brighten"))
  
  // Automation rules
  craft.label_create(dashboard_window, 800, 80, 200, 30, @ptrFromInt("Automation:"))
  craft.button_create(dashboard_window, 800, 120, 180, 40, @ptrFromInt("Create Rule"))
  craft.button_create(dashboard_window, 800, 180, 180, 40, @ptrFromInt("View Rules"))
  
  // Status
  status_label = craft.label_create(dashboard_window, 20, 740, 1160, 30, @ptrFromInt("Ready"))
  
  // Refresh button
  craft.button_create(dashboard_window, 1020, 20, 150, 40, @ptrFromInt("Refresh"))
}

fn dashboard_refresh() {
  // Clear device list
  craft.listbox_clear(device_list)
  
  // Add devices
  var device_count: u32 = home.home_device_get_count()
  
  var i: u32 = 0
  while i < device_count {
    var device_name: [u8; 64]
    home.home_device_get_name(i, @ptrFromInt(device_name))
    
    craft.listbox_add_item(device_list, @ptrFromInt(device_name))
    
    i = i + 1
  }
  
  dashboard_update_status(@ptrFromInt("Refreshed"))
}

fn dashboard_update_status(message: u64) {
  craft.label_set_text(status_label, message)
}

export fn dashboard_handle_button(button_id: u32) {
  if button_id == 0 {
    // Turn On
    var selected: u32 = craft.listbox_get_selected(device_list)
    if selected != 0xFFFFFFFF {
      home.home_device_set_state(selected, 1)
      dashboard_update_status(@ptrFromInt("Device turned on"))
    }
  } else if button_id == 1 {
    // Turn Off
    var selected: u32 = craft.listbox_get_selected(device_list)
    if selected != 0xFFFFFFFF {
      home.home_device_set_state(selected, 0)
      dashboard_update_status(@ptrFromInt("Device turned off"))
    }
  } else if button_id == 5 {
    // Refresh
    dashboard_refresh()
  }
}

export fn main() {
  home.home_automation_init()
  
  dashboard_init()
  
  craft.event_loop(dashboard_window)
}
