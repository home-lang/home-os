// home-os Tetris Game
// Classic tetris

import "../../kernel/src/core/foundation.home" as foundation
import "../../kernel/src/drivers/keyboard.home" as keyboard
import "../../kernel/src/drivers/timer.home" as timer

const GRID_WIDTH: u32 = 10
const GRID_HEIGHT: u32 = 20

var grid: [[u8; 10]; 20]
var current_piece: [u8; 16]
var piece_x: i32 = 4
var piece_y: i32 = 0
var score: u32 = 0
var game_over: u32 = 0

fn tetris_draw() {
  foundation.vga_clear()
  foundation.vga_write_string("=== Tetris ===\n")
  foundation.vga_write_string("Score: ")
  foundation.vga_write_string("\n\n")
  
  var y: u32 = 0
  while y < GRID_HEIGHT {
    foundation.vga_write_char('|')
    var x: u32 = 0
    while x < GRID_WIDTH {
      if grid[y][x] != 0 {
        foundation.vga_write_char('#')
      } else {
        foundation.vga_write_char(' ')
      }
      x = x + 1
    }
    foundation.vga_write_string("|\n")
    y = y + 1
  }
  
  foundation.vga_write_string("+----------+\n")
  foundation.vga_write_string("\nArrows=Move Space=Rotate Q=Quit\n")
}

export fn tetris_main() {
  score = 0
  game_over = 0
  
  tetris_draw()
  
  var running: u32 = 1
  while running == 1 {
    timer.timer_sleep_ms(500)
    
    // Update game (stub)
    piece_y = piece_y + 1
    
    tetris_draw()
    
    if keyboard.keyboard_has_char() == 1 {
      var ch: u8 = keyboard.keyboard_getchar()
      if ch == 'q' or ch == 'Q' {
        running = 0
      }
    }
  }
}
